Question1:Create a database , give it name like "Human_Resource".

use Human_Resource
switched to db Human_Resource

Question2:Create a collection inside this named "employee".

Human_Resource> db.createCollection("employee");
{ ok: 1 }

Question3:Query the collection "employee" and list all the documents.
Link:https://prepbytes-misc-images.s3.ap-south-1.amazonaws.com/assets/1640781204638-employee.json

Human_Resource> db.employee.insertMany([{
    ...   "firstName": "John",
    ...   "lastName": "Doe",
    ...   "salary": "25000",
    ...   "department": "HR",
    ...   "lastCompany": "X",
    ...   "lastSalary": "10000",
    ...   "overallExp": "2",
    ...   "contactInfo": "1234567890",
    ...   "yearGrad": "2016",
    ...   "gradStream": "CSE"
    ... },
    ... {
    ...   "firstName": "Rohan",
    ...   "lastName": "Jame",
    ...   "salary": "30000",
    ...   "department": "Technical",
    ...   "lastCompany": "Y",
    ...   "lastSalary": "15000",
    ...   "overallExp": "1",
    ...   "contactInfo": "1234567860",
    ...   "yearGrad": "2015",
    ...   "gradStream": "CSE"
    ... },
    ... {
    ...  "firstName": "Jame",
    ...   "lastName": "Doe",
    ...   "salary": "35000",
    ...   "department": "Accounts",
    ...   "lastCompany": "Z",
    ...   "lastSalary": "20000",
    ...   "overallExp": "1",
    ...   "contactInfo": "123567890",
    ...   "yearGrad": "2019",
    ...   "gradStream": "ECE"
    ... },
    ... {
    ...  "firstName": "Sao",
    ...   "lastName": "Avika",
    ...   "salary": "30000",
    ...   "department": "Sales",
    ...   "lastCompany": "Y",
    ...   "lastSalary": "15000",
    ...   "overallExp": "2",
    ...   "contactInfo": "1234567860",
    ...   "yearGrad": "2015",
    ...   "gradStream": "CSE"
    ... },
    ... {
    ...  "firstName": "Jame",
    ...   "lastName": "roh",
    ...   "salary": "35000",
    ...   "department": "Accounts",
    ...   "lastCompany": "Z",
    ...   "lastSalary": "15000",
    ...   "overallExp": "2",
    ...   "contactInfo": "123567890",
    ...   "yearGrad": "2019",
    ...   "gradStream": "EEE"
    ... },
    ... {
    ...   "firstName": "Rohan",
    ...   "lastName": "Jame",
    ...   "salary": "30000",
    ...   "department": "Technical",
    ...   "lastCompany": "Y",
    ...   "lastSalary": "15000",
    ...   "overallExp": "1",
    ...   "contactInfo": "1234567860",
    ...   "yearGrad": "2015",
    ...   "gradStream": "CSE"
    ... },
    ... {
    ...    "firstName": "Jame",
    ...   "lastName": "Doe",
    ...   "salary": "35000",
    ...   "department": "Accounts",
    ...   "lastCompany": "Z",
    ...   "lastSalary": "20000",
    ...   "overallExp": "1",
    ...   "contactInfo": "123567890",
    ...   "yearGrad": "2019",
    ...   "gradStream": "ECE"
    ... },
    ... {
    ...   "firstName": "Sao",
    ...   "lastName": "Avika",
    ...   "salary": "30000",
    ...   "department": "Sales",
    ...   "lastCompany": "Y",
    ...   "lastSalary": "15000",
    ...   "overallExp": "2",
    ...   "contactInfo": "1234567860",
    ...   "yearGrad": "2015",
    ...   "gradStream": "CSE"
    ... },
    ... {
    ...   "firstName": "Jame",
    ...   "lastName": "Doe",
    ...   "salary": "35000",
    ...   "department": "Accounts",
    ...   "lastCompany": "Z",
    ...   "lastSalary": "15000",
    ...   "overallExp": "2",
    ...   "contactInfo": "123567890",
    ...   "yearGrad": "2019",
    ...   "gradStream": "EEE"
    ... },
    ... {
    ...   "firstName": "Rohan",
    ...   "lastName": "Jame",
    ...   "salary": "30000",
    ...   "department": "Technical",
    ...   "lastCompany": "Y",
    ...   "lastSalary": "15000",
    ...   "overallExp": "1",
    ...   "contactInfo": "1234567860",
    ...   "yearGrad": "2015",
    ...   "gradStream": "CSE"
    ... },
    ... {
    ...   "firstName": "Jame",
    ...   "lastName": "Doe",
    ...   "salary": "35000",
    ...   "department": "Accounts",
    ...   "lastCompany": "Z",
    ...   "lastSalary": "20000",
    ...   "overallExp": "1",
    ...   "contactInfo": "123567890",
    ...   "yearGrad": "2019",
    ...   "gradStream": "ECE"
    ... },
    ... {
    ...   "firstName": "Sao",
    ...   "lastName": "Avika",
    ...   "salary": "30000",
    ...   "department": "Sales",
    ...   "lastCompany": "Y",
    ...   "lastSalary": "15000",
    ...   "overallExp": "2",
    ...   "contactInfo": "1234567860",
    ...   "yearGrad": "2015",
    ...   "gradStream": "CSE"
    ... },
    ... {
    ...   "firstName": "Jame",
    ...   "lastName": "Doe",
    ...   "salary": "35000",
    ...   "department": "Accounts",
    ...   "lastCompany": "Z",
    ...   "lastSalary": "15000",
    ...   "overallExp": "2",
    ...   "contactInfo": "123567890",
    ...   "yearGrad": "2019",
    ...   "gradStream": "EEE"
    ... }]);

{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("63849bbbcf95b0907dcee9aa"),
    '1': ObjectId("63849bbbcf95b0907dcee9ab"),
    '2': ObjectId("63849bbbcf95b0907dcee9ac"),
    '3': ObjectId("63849bbbcf95b0907dcee9ad"),
    '4': ObjectId("63849bbbcf95b0907dcee9ac"),
    '5': ObjectId("63849bbbcf95b0907dcee9ad"),
    '6': ObjectId("63849bbbcf95b0907dcee9ae"),
    '7': ObjectId("63849bbbcf95b0907dcee9af"),
    '8': ObjectId("63849bbbcf95b0907dcee9b0"),
    '9': ObjectId("63849bbbcf95b0907dcee9b1"),
    '10': ObjectId("63849bbbcf95b0907dcee9b2"),
    '11': ObjectId("63849bbbcf95b0907dcee9b3"),
    '12': ObjectId("63849bbbcf95b0907dcee9b4"),
    '13': ObjectId("63849bbbcf95b0907dcee9b5"),
    '14': ObjectId("63849bbbcf95b0907dcee9b6")
  }
}

Note:Data's are present in JSON format:

Human_Resource> db.employee.find().pretty();
[
 {
  _id: ObjectId("63849bbbcf95b0907dcee9aa"),
  firstName: 'John',
  lastName: 'Doe',
  salary: '25000',
  department: 'HR',
  lastCompany: 'X',
  lastSalary: '10000',
  overallExp: '2',
  contactInfo: '1234567890',
  yearGrad: '2016',
  gradStream: 'CSE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9ab"),
  firstName: 'Rohan',
  lastName: 'Jame',
  salary: '30000',
  department: 'Technical',
  lastCompany: 'Y',
  lastSalary: '15000',
  overallExp: '1',
  contactInfo: '1234567860',
  yearGrad: '2015',
  gradStream: 'CSE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9ac"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '20000',
  overallExp: '1',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'ECE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9ad"),
  firstName: 'Sao',
  lastName: 'Avika',
  salary: '30000',
  department: 'Sales',
  lastCompany: 'Y',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '1234567860',
  yearGrad: '2015',
  gradStream: 'CSE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9ae"),
  firstName: 'Jame',
  lastName: 'roh',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'EEE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9af"),
  firstName: 'Rohan',
  lastName: 'Jame',
  salary: '30000',
  department: 'Technical',
  lastCompany: 'Y',
  lastSalary: '15000',
  overallExp: '1',
  contactInfo: '1234567860',
  yearGrad: '2015',
  gradStream: 'CSE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b0"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '20000',
  overallExp: '1',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'ECE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b1"),
  firstName: 'Sao',
  lastName: 'Avika',
  salary: '30000',
  department: 'Sales',
  lastCompany: 'Y',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '1234567860',
  yearGrad: '2015',
  gradStream: 'CSE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b2"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'EEE'
   },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b3"),
  firstName: 'Rohan',
  lastName: 'Jame',
  salary: '30000',
  department: 'Technical',
  lastCompany: 'Y',
  lastSalary: '15000',
  overallExp: '1',
  contactInfo: '1234567860',
  yearGrad: '2015',
  gradStream: 'CSE'
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b4"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '20000',
  overallExp: '1',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'ECE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b5"),
  firstName: 'Sao',
  lastName: 'Avika',
  salary: '30000',
  department: 'Sales',
  lastCompany: 'Y',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '1234567860',
  yearGrad: '2015',
  gradStream: 'CSE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b6"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'EEE' 
  }
]


Question4:Query the collection "employee" and list the employees who are having salary more than 30000.

Human_Resource> db.employee.find({"salary" : {$gt:"30000"}});
[
  { 
  _id: ObjectId("63849bbbcf95b0907dcee9ac"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '20000',
  overallExp: '1',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'ECE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9ae"),
  firstName: 'Jame',
  lastName: 'roh',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'EEE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b0"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '20000',
  overallExp: '1',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'ECE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b2"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'EEE' 
  },
{
   _id: ObjectId("63849bbbcf95b0907dcee9b4"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '20000',
  overallExp: '1',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'ECE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b6"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'EEE' }
]

Question5:Query the collection "employee" and list the employees who are having experience more than 2 years.

Human_Resource> db.employee.find({"overallExp" : {$gt:"2"}});
Comment:As no data is available whose experience is greater than 2 years.

Question6:Query the collection "employee" and list the employees who are graduated after 2015 and having experience more than 1 year.

Human_Resource> db.employee.find({yearGrad:{$gt:"2015"},overallExp:{$gt:"1"}});
[
 { 
  _id: ObjectId("63849bbbcf95b0907dcee9aa"),
  firstName: 'John',
  lastName: 'Doe',
  salary: '25000',
  department: 'HR',
  lastCompany: 'X',
  lastSalary: '10000',
  overallExp: '2',
  contactInfo: '1234567890',
  yearGrad: '2016',
  gradStream: 'CSE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9ae"),
  firstName: 'Jame',
  lastName: 'roh',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'EEE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b2"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'EEE' 
  },
{ 
  _id: ObjectId("63849bbbcf95b0907dcee9b6"),
  firstName: 'Jame',
  lastName: 'Doe',
  salary: '35000',
  department: 'Accounts',
  lastCompany: 'Z',
  lastSalary: '15000',
  overallExp: '2',
  contactInfo: '123567890',
  yearGrad: '2019',
  gradStream: 'EEE' }
]


Question7:Query the collection "employee" and update the salary of the employee whose salary is greater than 70000 to 65000.

Human_Resource> db.employee.updateMany({"salary":{$gt:"70000"}},{$set:{"salary":"65000"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}


Question8:Delete all the documents from "employee" where last company is Y.

Human_Resource> db.employee.deleteMany({"lastCompany":"Y"});
{ acknowledged: true, deletedCount: 6 }